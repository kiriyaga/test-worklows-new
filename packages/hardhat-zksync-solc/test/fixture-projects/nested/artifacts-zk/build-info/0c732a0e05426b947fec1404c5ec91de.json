{"id":"0c732a0e05426b947fec1404c5ec91de","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"contracts/deps/Foo.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\ncontract FooDep {\n  function foo() public pure returns (string memory) {\n    return \"Foo\";\n  }    \n}\n"},"contracts/deps/more_deps/Bar.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\ncontract BarDep {\n  function bar() public pure returns (string memory) {\n    return \"Bar\";\n  }    \n}\n"},"contracts/NestedFactory.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\n// import Foo.sol and Bar.sol from nested directories\nimport \"./deps/Foo.sol\";\nimport \"./deps/more_deps/Bar.sol\";\n\ncontract NestedFactory {\n    FooDep _foo;\n    BarDep _bar;\n\n    constructor() {\n        _foo = new FooDep();\n        _bar = new BarDep();\n    }\n\n    function foo() public view returns (string memory) {\n        return _foo.foo();\n    }\n\n    \n    function bar() public view returns (string memory) {\n        return _bar.bar();\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"mode":"3"},"outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata"],"":["ast"]}},"libraries":{}}},"output":{"errors":[],"version":"0.8.17","long_version":"0.8.17+commit.8df45f5f.Linux.g++","zk_version":"1.3.18","sources":{"contracts/NestedFactory.sol":{"id":0,"ast":{"absolutePath":"contracts/NestedFactory.sol","exportedSymbols":{"BarDep":[70],"FooDep":[59],"NestedFactory":[48]},"id":49,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity",">=","0.4",".22","<","0.9",".0"],"nodeType":"PragmaDirective","src":"32:32:0"},{"absolutePath":"contracts/deps/Foo.sol","file":"./deps/Foo.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":49,"sourceUnit":60,"src":"120:24:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/deps/more_deps/Bar.sol","file":"./deps/more_deps/Bar.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":49,"sourceUnit":71,"src":"145:34:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"NestedFactory","contractDependencies":[59,70],"contractKind":"contract","fullyImplemented":true,"id":48,"linearizedBaseContracts":[48],"name":"NestedFactory","nameLocation":"190:13:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":6,"mutability":"mutable","name":"_foo","nameLocation":"217:4:0","nodeType":"VariableDeclaration","scope":48,"src":"210:11:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_FooDep_$59","typeString":"contract FooDep"},"typeName":{"id":5,"nodeType":"UserDefinedTypeName","pathNode":{"id":4,"name":"FooDep","nameLocations":["210:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"210:6:0"},"referencedDeclaration":59,"src":"210:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_FooDep_$59","typeString":"contract FooDep"}},"visibility":"internal"},{"constant":false,"id":9,"mutability":"mutable","name":"_bar","nameLocation":"234:4:0","nodeType":"VariableDeclaration","scope":48,"src":"227:11:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_BarDep_$70","typeString":"contract BarDep"},"typeName":{"id":8,"nodeType":"UserDefinedTypeName","pathNode":{"id":7,"name":"BarDep","nameLocations":["227:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":70,"src":"227:6:0"},"referencedDeclaration":70,"src":"227:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_BarDep_$70","typeString":"contract BarDep"}},"visibility":"internal"},{"body":{"id":26,"nodeType":"Block","src":"259:65:0","statements":[{"expression":{"id":17,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12,"name":"_foo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"269:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_FooDep_$59","typeString":"contract FooDep"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":15,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"276:10:0","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$__$returns$_t_contract$_FooDep_$59_$","typeString":"function () returns (contract FooDep)"},"typeName":{"id":14,"nodeType":"UserDefinedTypeName","pathNode":{"id":13,"name":"FooDep","nameLocations":["280:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"280:6:0"},"referencedDeclaration":59,"src":"280:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_FooDep_$59","typeString":"contract FooDep"}}},"id":16,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"276:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_FooDep_$59","typeString":"contract FooDep"}},"src":"269:19:0","typeDescriptions":{"typeIdentifier":"t_contract$_FooDep_$59","typeString":"contract FooDep"}},"id":18,"nodeType":"ExpressionStatement","src":"269:19:0"},{"expression":{"id":24,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":19,"name":"_bar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"298:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_BarDep_$70","typeString":"contract BarDep"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":22,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"305:10:0","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$__$returns$_t_contract$_BarDep_$70_$","typeString":"function () returns (contract BarDep)"},"typeName":{"id":21,"nodeType":"UserDefinedTypeName","pathNode":{"id":20,"name":"BarDep","nameLocations":["309:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":70,"src":"309:6:0"},"referencedDeclaration":70,"src":"309:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_BarDep_$70","typeString":"contract BarDep"}}},"id":23,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"305:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_BarDep_$70","typeString":"contract BarDep"}},"src":"298:19:0","typeDescriptions":{"typeIdentifier":"t_contract$_BarDep_$70","typeString":"contract BarDep"}},"id":25,"nodeType":"ExpressionStatement","src":"298:19:0"}]},"id":27,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":10,"nodeType":"ParameterList","parameters":[],"src":"256:2:0"},"returnParameters":{"id":11,"nodeType":"ParameterList","parameters":[],"src":"259:0:0"},"scope":48,"src":"245:79:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":36,"nodeType":"Block","src":"381:34:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":32,"name":"_foo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"398:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_FooDep_$59","typeString":"contract FooDep"}},"id":33,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"403:3:0","memberName":"foo","nodeType":"MemberAccess","referencedDeclaration":58,"src":"398:8:0","typeDescriptions":{"typeIdentifier":"t_function_external_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure external returns (string memory)"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"398:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":31,"id":35,"nodeType":"Return","src":"391:17:0"}]},"functionSelector":"c2985578","id":37,"implemented":true,"kind":"function","modifiers":[],"name":"foo","nameLocation":"339:3:0","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[],"src":"342:2:0"},"returnParameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":37,"src":"366:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":29,"name":"string","nodeType":"ElementaryTypeName","src":"366:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"365:15:0"},"scope":48,"src":"330:85:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":46,"nodeType":"Block","src":"477:34:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":42,"name":"_bar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"494:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_BarDep_$70","typeString":"contract BarDep"}},"id":43,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"499:3:0","memberName":"bar","nodeType":"MemberAccess","referencedDeclaration":69,"src":"494:8:0","typeDescriptions":{"typeIdentifier":"t_function_external_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure external returns (string memory)"}},"id":44,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"494:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":41,"id":45,"nodeType":"Return","src":"487:17:0"}]},"functionSelector":"febb0f7e","id":47,"implemented":true,"kind":"function","modifiers":[],"name":"bar","nameLocation":"435:3:0","nodeType":"FunctionDefinition","parameters":{"id":38,"nodeType":"ParameterList","parameters":[],"src":"438:2:0"},"returnParameters":{"id":41,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":47,"src":"462:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":39,"name":"string","nodeType":"ElementaryTypeName","src":"462:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"461:15:0"},"scope":48,"src":"426:85:0","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":49,"src":"181:332:0","usedErrors":[]}],"src":"32:482:0"}},"contracts/deps/Foo.sol":{"id":1,"ast":{"absolutePath":"contracts/deps/Foo.sol","exportedSymbols":{"FooDep":[59]},"id":60,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":50,"literals":["solidity",">=","0.4",".22","<","0.9",".0"],"nodeType":"PragmaDirective","src":"32:32:1"},{"abstract":false,"baseContracts":[],"canonicalName":"FooDep","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":59,"linearizedBaseContracts":[59],"name":"FooDep","nameLocation":"75:6:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":57,"nodeType":"Block","src":"137:23:1","statements":[{"expression":{"hexValue":"466f6f","id":55,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"150:5:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_b608c74283f334e1f047dbbf1daa2407d41d4689aca67c422796f936acce16b7","typeString":"literal_string \"Foo\""},"value":"Foo"},"functionReturnParameters":54,"id":56,"nodeType":"Return","src":"143:12:1"}]},"functionSelector":"c2985578","id":58,"implemented":true,"kind":"function","modifiers":[],"name":"foo","nameLocation":"95:3:1","nodeType":"FunctionDefinition","parameters":{"id":51,"nodeType":"ParameterList","parameters":[],"src":"98:2:1"},"returnParameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":58,"src":"122:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":52,"name":"string","nodeType":"ElementaryTypeName","src":"122:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"121:15:1"},"scope":59,"src":"86:74:1","stateMutability":"pure","virtual":false,"visibility":"public"}],"scope":60,"src":"66:100:1","usedErrors":[]}],"src":"32:135:1"}},"contracts/deps/more_deps/Bar.sol":{"id":2,"ast":{"absolutePath":"contracts/deps/more_deps/Bar.sol","exportedSymbols":{"BarDep":[70]},"id":71,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":61,"literals":["solidity",">=","0.4",".22","<","0.9",".0"],"nodeType":"PragmaDirective","src":"32:32:2"},{"abstract":false,"baseContracts":[],"canonicalName":"BarDep","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":70,"linearizedBaseContracts":[70],"name":"BarDep","nameLocation":"75:6:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":68,"nodeType":"Block","src":"137:23:2","statements":[{"expression":{"hexValue":"426172","id":66,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"150:5:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c1620375a8984b68a8a35054aae54aa69d13022892c65c358427e8a2c391985f","typeString":"literal_string \"Bar\""},"value":"Bar"},"functionReturnParameters":65,"id":67,"nodeType":"Return","src":"143:12:2"}]},"functionSelector":"febb0f7e","id":69,"implemented":true,"kind":"function","modifiers":[],"name":"bar","nameLocation":"95:3:2","nodeType":"FunctionDefinition","parameters":{"id":62,"nodeType":"ParameterList","parameters":[],"src":"98:2:2"},"returnParameters":{"id":65,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":69,"src":"122:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":63,"name":"string","nodeType":"ElementaryTypeName","src":"122:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"121:15:2"},"scope":70,"src":"86:74:2","stateMutability":"pure","virtual":false,"visibility":"public"}],"scope":71,"src":"66:100:2","usedErrors":[]}],"src":"32:135:2"}}},"contracts":{"contracts/NestedFactory.sol":{"NestedFactory":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"bar","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"foo","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"bar\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"foo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NestedFactory.sol\":\"NestedFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NestedFactory.sol\":{\"keccak256\":\"0x519003d5e341b8685533f66db9ba5a66cc70ac3236416323b1ab731236be0bad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06cb74e272d42e733eb748c039d0c023a45f4814b223632476e9bf1e376c2595\",\"dweb:/ipfs/QmfUnEWPq3MppGRt6YvxcL778Zz5KX85Liyrtrn7eAvN65\"]},\"contracts/deps/Foo.sol\":{\"keccak256\":\"0xd237682cb86cc07f5a901d23d9eebf3f91b4c97f113b39d1d06b64e10a6bc4e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0451be902c9d5b5cedcd9763b1c0a3ee6bd1529fc8dbeb920c67350a4feb768c\",\"dweb:/ipfs/QmaZfAa5LWSz4CxS59A3By9ehEjyEyPgtgLmiGNuyNpEtw\"]},\"contracts/deps/more_deps/Bar.sol\":{\"keccak256\":\"0x59a77c28e9612a2710ae86961787d1892705b71913b21026860b36be18420e69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://800358f0dcefcd6f7ecbae2a9684b96bfd04425f7ef9e567562bf58af0f9dc2c\",\"dweb:/ipfs/QmTBggpHH22nQS7TXQaB18Gcv4PTSZs2tjULh3xVYd3HUf\"]}},\"version\":1}","zk_version":"1.3.18"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"NestedFactory.sol:NestedFactory\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[1]\n\tptr.add\tr1, r0, r3\n\tadd\tr3, r0, r1\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, r1\n\tptr.add\tr3, r1, stack[@ptr_return_data]\n\tadd\t128, r0, r4\n\tst.1\t64, r4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tsub.s!\t4, r1, r2\n\tjump.lt\t@.BB0_2\n\tptr.add\tr3, r1, r1\n\tld\tr3, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_10[0], r2, r3\n\tjump.eq\t@.BB0_51\n\tsub.s!\t@CPI0_11[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r2\n\tadd\t@CPI0_18[0], r0, r3\n\tst.1\t128, r3\n\tcontext.gas_left\tr3\n\tand\t@CPI0_4[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_30\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB0_37\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_1[0], r0, r1\n\tst.1\t164, r1\n\tcontext.gas_left\tr1\n\tadd\t@CPI0_2[0], r0, r2\n\tst.1\t128, r2\n\tst.1\t132, r0\n\tadd\t96, r0, r2\n\tadd\tr2, r0, stack-[1]\n\tst.1\t196, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tst.1\t228, r0\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_4\n\tld\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_7\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tjump\t@.BB0_8\n.BB0_4:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tand\t@CPI0_0[0], r2, r2\n.BB0_8:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_80\n\tadd\tr0, r0, r6\n.BB0_10:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_10\n.BB0_80:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_12\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr3, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_12:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t96, r2, r1\n\tshl.s\t64, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_51:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r2\n\tsload\tr2, r2\n\tadd\t@CPI0_12[0], r0, r3\n\tst.1\t128, r3\n\tcontext.gas_left\tr3\n\tand\t@CPI0_4[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_54\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB0_61\n.BB0_7:\n\tand\t@CPI0_4[0], r1, r1\n\tsload\tr0, r2\n\tand\t@CPI0_5[0], r2, r2\n\tor\tr2, r1, r1\n\tsstore\tr0, r1\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.gt\t@.BB0_13\n\tadd\t36, r1, r2\n\tadd\t@CPI0_7[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tcontext.gas_left\tr3\n\tadd\tstack-[1], r0, r4\n\tst.1\tr2, r4\n\tadd\t@CPI0_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t100, r1, r2\n\tst.1\tr2, r0\n\tadd\t4, r1, r2\n\tst.1\tr2, r0\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_14\n\tld\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_18\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tjump\t@.BB0_19\n.BB0_30:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t192, r3, r1\n\tor\t@CPI0_13[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_31\n.BB0_37:\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r4\n\tjump.eq\t@.BB0_75\n\tadd\tr0, r0, r5\n.BB0_39:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t128, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_39\n.BB0_75:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_41\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r2, r2\n\tadd\t128, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_41:\n\tadd\t159, r3, r2\n\tsub.s\t32, r0, r1\n\tand\tr2, r1, r2\n\tadd\t@CPI0_14[0], r2, r4\n\tsub.s!\t@CPI0_15[0], r4, r4\n\tjump.lt\t@.BB0_13\n\tadd\t@CPI0_16[0], r0, r4\n\tsub.s!\t32, r3, r5\n\tadd\tr0, r0, r5\n\tadd.lt\tr4, r0, r5\n\tand\t@CPI0_16[0], r3, r6\n\tsub!\tr6, r0, r7\n\tadd.le\tr0, r0, r4\n\tsub.s!\t@CPI0_16[0], r6, r6\n\tadd.ne\tr5, r0, r4\n\tst.1\t64, r2\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB0_2\n\tld.1\t128, r4\n\tsub.s!\t@CPI0_17[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tadd\t128, r3, r5\n\tadd\t159, r4, r3\n\tadd\t@CPI0_16[0], r0, r6\n\tsub!\tr3, r5, r7\n\tadd\tr0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI0_16[0], r5, r8\n\tand\t@CPI0_16[0], r3, r3\n\tsub!\tr3, r8, r9\n\tadd.ge\tr0, r0, r6\n\txor\tr3, r8, r3\n\tsub.s!\t@CPI0_16[0], r3, r3\n\tadd.ne\tr7, r0, r6\n\tsub!\tr6, r0, r3\n\tjump.ne\t@.BB0_2\n\tadd\t128, r4, r3\n\tld.1\tr3, r3\n\tsub.s!\t@CPI0_17[0], r3, r6\n\tjump.gt\t@.BB0_13\n\tadd\t63, r3, r6\n\tand\tr6, r1, r1\n\tadd\tr1, r2, r1\n\tsub.s!\t@CPI0_17[0], r1, r6\n\tjump.gt\t@.BB0_13\n\tst.1\t64, r1\n\tst.1.inc\tr2, r3, r1\n\tadd\t160, r4, r4\n\tadd\tr3, r4, r6\n\tsub!\tr6, r5, r5\n\tjump.gt\t@.BB0_2\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_36\n\tadd\tr0, r0, r5\n.BB0_50:\n\tadd\tr5, r1, r6\n\tadd\tr5, r4, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_50\n\tjump\t@.BB0_36\n.BB0_54:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t192, r3, r1\n\tor\t@CPI0_13[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_55\n.BB0_61:\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r4\n\tjump.eq\t@.BB0_77\n\tadd\tr0, r0, r5\n.BB0_63:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t128, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_63\n.BB0_77:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_65\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r2, r2\n\tadd\t128, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_65:\n\tadd\t159, r3, r2\n\tsub.s\t32, r0, r1\n\tand\tr2, r1, r2\n\tadd\t@CPI0_14[0], r2, r4\n\tsub.s!\t@CPI0_15[0], r4, r4\n\tjump.ge\t@.BB0_66\n.BB0_13:\n\tadd\t@CPI0_19[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_20[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_66:\n\tadd\t@CPI0_16[0], r0, r4\n\tsub.s!\t32, r3, r5\n\tadd\tr0, r0, r5\n\tadd.lt\tr4, r0, r5\n\tand\t@CPI0_16[0], r3, r6\n\tsub!\tr6, r0, r7\n\tadd.le\tr0, r0, r4\n\tsub.s!\t@CPI0_16[0], r6, r6\n\tadd.ne\tr5, r0, r4\n\tst.1\t64, r2\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB0_2\n\tld.1\t128, r4\n\tsub.s!\t@CPI0_17[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tadd\t128, r3, r5\n\tadd\t159, r4, r3\n\tadd\t@CPI0_16[0], r0, r6\n\tsub!\tr3, r5, r7\n\tadd\tr0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI0_16[0], r5, r8\n\tand\t@CPI0_16[0], r3, r3\n\tsub!\tr3, r8, r9\n\tadd.ge\tr0, r0, r6\n\txor\tr3, r8, r3\n\tsub.s!\t@CPI0_16[0], r3, r3\n\tadd.ne\tr7, r0, r6\n\tsub!\tr6, r0, r3\n\tjump.ne\t@.BB0_2\n\tadd\t128, r4, r3\n\tld.1\tr3, r3\n\tsub.s!\t@CPI0_17[0], r3, r6\n\tjump.gt\t@.BB0_13\n\tadd\t63, r3, r6\n\tand\tr6, r1, r1\n\tadd\tr1, r2, r1\n\tsub.s!\t@CPI0_17[0], r1, r6\n\tjump.gt\t@.BB0_13\n\tst.1\t64, r1\n\tst.1.inc\tr2, r3, r1\n\tadd\t160, r4, r4\n\tadd\tr3, r4, r6\n\tsub!\tr6, r5, r5\n\tjump.le\t@.BB0_72\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_14:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tand\t@CPI0_0[0], r2, r2\n.BB0_19:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_79\n\tadd\tr0, r0, r6\n.BB0_21:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_21\n.BB0_79:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_23\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr3, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_23:\n\tjump\t@.BB0_12\n.BB0_31:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_76\n\tadd\tr0, r0, r6\n.BB0_33:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_33\n.BB0_76:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_35\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n\tjump\t@.BB0_35\n.BB0_55:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_78\n\tadd\tr0, r0, r6\n.BB0_57:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_57\n.BB0_78:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_59\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_59:\n.BB0_35:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_18:\n\tand\t@CPI0_4[0], r1, r1\n\tadd\t1, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI0_5[0], r3, r3\n\tor\tr3, r1, r1\n\tsstore\tr2, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_9[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_72:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_60\n\tadd\tr0, r0, r5\n.BB0_74:\n\tadd\tr5, r1, r6\n\tadd\tr5, r4, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_74\n.BB0_60:\n.BB0_36:\n\tadd\tr3, r1, r1\n\tst.1\tr1, r0\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[1]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\nabi_encode_string:\n.func_begin1:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tadd\t64, r1, r1\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB1_3\n\tadd\tr0, r0, r4\n.BB1_2:\n\tadd\tr4, r1, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_2\n.BB1_3:\n\tadd\tr3, r1, r2\n\tst.1\tr2, r0\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end1:\n\n__farcall:\n.func_begin2:\n.tmp0:\n\tfar_call\tr1, r2, @.BB2_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB2_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end2:\n\n__staticcall:\n.func_begin3:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB3_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB3_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end3:\n\n\t.data\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 452313371178257960794502766979075745889337972681363474573137705276513474059\nCPI0_2:\n\t.cell -45094662312588414058508742492242807367897819822786606328124609013070528553987\nCPI0_3:\n\t.cell 904625697166532776746648320380374280103671765658434360802338178844445376512\nCPI0_4:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_5:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_6:\n\t.cell 18446744073709551483\nCPI0_7:\n\t.cell 452313382634223035851849928598763196615850622146364095960565821955698124817\nCPI0_8:\n\t.cell 904625697166532776746648320380374280103671765658434358441154937409622769664\nCPI0_9:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_10:\n\t.cell 4273672062\nCPI0_11:\n\t.cell 3264763256\nCPI0_12:\n\t.cell -574118372904492987677146038359613397788680621569796365479061958501853036544\nCPI0_13:\n\t.cell 316912652418240591808998408192\nCPI0_14:\n\t.cell -18446744073709551616\nCPI0_15:\n\t.cell -18446744073709551488\nCPI0_16:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_17:\n\t.cell 18446744073709551615\nCPI0_18:\n\t.cell -27774245974683124405050729397388575079288907678164764833945762937327730032640\nCPI0_19:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_20:\n\t.cell 2852213850513516153367582212096\n","bytecode":{"object":""},"methodIdentifiers":{"bar()":"febb0f7e","foo()":"c2985578"}},"irOptimized":"/// @use-src 0:\"contracts/NestedFactory.sol\"\nobject \"NestedFactory_48\" {\n    code {\n        {\n            /// @src 0:181:513  \"contract NestedFactory {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            /// @src 0:276:288  \"new FooDep()\"\n            let _2 := datasize(\"FooDep_59\")\n            let _3 := add(_1, _2)\n            let _4 := sub(shl(64, 1), 1)\n            if or(gt(_3, _4), lt(_3, _1))\n            {\n                /// @src 0:181:513  \"contract NestedFactory {...\"\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            /// @src 0:276:288  \"new FooDep()\"\n            datacopy(_1, dataoffset(\"FooDep_59\"), _2)\n            let _5 := 0\n            let expr_address := create(_5, _1, sub(_3, _1))\n            if iszero(expr_address)\n            {\n                /// @src 0:181:513  \"contract NestedFactory {...\"\n                let pos := mload(64)\n                returndatacopy(pos, /** @src 0:276:288  \"new FooDep()\" */ _5, /** @src 0:181:513  \"contract NestedFactory {...\" */ returndatasize())\n                revert(pos, returndatasize())\n            }\n            let _6 := sub(shl(160, /** @src 0:276:288  \"new FooDep()\" */ 1), 1)\n            /// @src 0:181:513  \"contract NestedFactory {...\"\n            let _7 := not(sub(shl(160, /** @src 0:276:288  \"new FooDep()\" */ 1), 1))\n            /// @src 0:181:513  \"contract NestedFactory {...\"\n            sstore(/** @src 0:276:288  \"new FooDep()\" */ _5, /** @src 0:181:513  \"contract NestedFactory {...\" */ or(and(sload(/** @src 0:276:288  \"new FooDep()\" */ _5), /** @src 0:181:513  \"contract NestedFactory {...\" */ _7), and(expr_address, _6)))\n            /// @src 0:305:317  \"new BarDep()\"\n            let _8 := /** @src 0:181:513  \"contract NestedFactory {...\" */ mload(64)\n            /// @src 0:305:317  \"new BarDep()\"\n            let _9 := datasize(\"BarDep_70\")\n            let _10 := add(_8, _9)\n            if or(gt(_10, /** @src 0:276:288  \"new FooDep()\" */ _4), /** @src 0:305:317  \"new BarDep()\" */ lt(_10, _8))\n            {\n                /// @src 0:181:513  \"contract NestedFactory {...\"\n                mstore(/** @src 0:276:288  \"new FooDep()\" */ _5, /** @src 0:181:513  \"contract NestedFactory {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src 0:276:288  \"new FooDep()\" */ _5, /** @src 0:181:513  \"contract NestedFactory {...\" */ 0x24)\n            }\n            /// @src 0:305:317  \"new BarDep()\"\n            datacopy(_8, dataoffset(\"BarDep_70\"), _9)\n            let expr_address_1 := create(/** @src 0:276:288  \"new FooDep()\" */ _5, /** @src 0:305:317  \"new BarDep()\" */ _8, sub(_10, _8))\n            if iszero(expr_address_1)\n            {\n                /// @src 0:181:513  \"contract NestedFactory {...\"\n                let pos_1 := mload(64)\n                returndatacopy(pos_1, /** @src 0:276:288  \"new FooDep()\" */ _5, /** @src 0:181:513  \"contract NestedFactory {...\" */ returndatasize())\n                revert(pos_1, returndatasize())\n            }\n            sstore(/** @src 0:298:317  \"_bar = new BarDep()\" */ 0x01, /** @src 0:181:513  \"contract NestedFactory {...\" */ or(and(sload(/** @src 0:298:317  \"_bar = new BarDep()\" */ 0x01), /** @src 0:181:513  \"contract NestedFactory {...\" */ _7), and(expr_address_1, _6)))\n            let _11 := mload(64)\n            let _12 := datasize(\"NestedFactory_48_deployed\")\n            codecopy(_11, dataoffset(\"NestedFactory_48_deployed\"), _12)\n            return(_11, _12)\n        }\n    }\n    /// @use-src 0:\"contracts/NestedFactory.sol\"\n    object \"NestedFactory_48_deployed\" {\n        code {\n            {\n                /// @src 0:181:513  \"contract NestedFactory {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _3 := 0\n                    switch shr(224, calldataload(_3))\n                    case 0xc2985578 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let value := and(sload(_3), sub(shl(160, 1), 1))\n                        /// @src 0:398:408  \"_foo.foo()\"\n                        mstore(_1, /** @src 0:181:513  \"contract NestedFactory {...\" */ shl(227, 0x18530aaf))\n                        /// @src 0:398:408  \"_foo.foo()\"\n                        let _4 := staticcall(gas(), value, _1, /** @src 0:181:513  \"contract NestedFactory {...\" */ 4, /** @src 0:398:408  \"_foo.foo()\" */ _1, /** @src 0:181:513  \"contract NestedFactory {...\" */ _3)\n                        /// @src 0:398:408  \"_foo.foo()\"\n                        if iszero(_4)\n                        {\n                            /// @src 0:181:513  \"contract NestedFactory {...\"\n                            let pos := mload(_2)\n                            returndatacopy(pos, _3, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 0:398:408  \"_foo.foo()\"\n                        let expr_mpos := /** @src 0:181:513  \"contract NestedFactory {...\" */ _3\n                        /// @src 0:398:408  \"_foo.foo()\"\n                        if _4\n                        {\n                            let _5 := returndatasize()\n                            returndatacopy(_1, /** @src 0:181:513  \"contract NestedFactory {...\" */ _3, /** @src 0:398:408  \"_foo.foo()\" */ _5)\n                            finalize_allocation(_1, _5)\n                            expr_mpos := abi_decode_string_fromMemory(_1, add(_1, _5))\n                        }\n                        /// @src 0:181:513  \"contract NestedFactory {...\"\n                        let memPos := mload(_2)\n                        return(memPos, sub(abi_encode_string(memPos, expr_mpos), memPos))\n                    }\n                    case 0xfebb0f7e {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let value_1 := and(sload(/** @src 0:494:498  \"_bar\" */ 0x01), /** @src 0:181:513  \"contract NestedFactory {...\" */ sub(shl(160, 1), 1))\n                        /// @src 0:494:504  \"_bar.bar()\"\n                        let _6 := /** @src 0:181:513  \"contract NestedFactory {...\" */ mload(_2)\n                        /// @src 0:494:504  \"_bar.bar()\"\n                        mstore(_6, /** @src 0:181:513  \"contract NestedFactory {...\" */ shl(225, 0x7f5d87bf))\n                        /// @src 0:494:504  \"_bar.bar()\"\n                        let _7 := staticcall(gas(), value_1, _6, /** @src 0:181:513  \"contract NestedFactory {...\" */ 4, /** @src 0:494:504  \"_bar.bar()\" */ _6, /** @src 0:181:513  \"contract NestedFactory {...\" */ _3)\n                        /// @src 0:494:504  \"_bar.bar()\"\n                        if iszero(_7)\n                        {\n                            /// @src 0:181:513  \"contract NestedFactory {...\"\n                            let pos_1 := mload(_2)\n                            returndatacopy(pos_1, _3, returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 0:494:504  \"_bar.bar()\"\n                        let expr_mpos_1 := /** @src 0:181:513  \"contract NestedFactory {...\" */ _3\n                        /// @src 0:494:504  \"_bar.bar()\"\n                        if _7\n                        {\n                            let _8 := returndatasize()\n                            returndatacopy(_6, /** @src 0:181:513  \"contract NestedFactory {...\" */ _3, /** @src 0:494:504  \"_bar.bar()\" */ _8)\n                            finalize_allocation(_6, _8)\n                            expr_mpos_1 := abi_decode_string_fromMemory(_6, add(_6, _8))\n                        }\n                        /// @src 0:181:513  \"contract NestedFactory {...\"\n                        let memPos_1 := mload(_2)\n                        return(memPos_1, sub(abi_encode_string(memPos_1, expr_mpos_1), memPos_1))\n                    }\n                }\n                revert(0, 0)\n            }\n            function copy_memory_to_memory_with_cleanup(src, dst, length)\n            {\n                let i := 0\n                for { } lt(i, length) { i := add(i, 32) }\n                {\n                    mstore(add(dst, i), mload(add(src, i)))\n                }\n                mstore(add(dst, length), 0)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                mstore(headStart, 32)\n                let length := mload(value0)\n                mstore(add(headStart, 32), length)\n                copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function abi_decode_string_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let offset := mload(headStart)\n                let _1 := 0xffffffffffffffff\n                if gt(offset, _1) { revert(0, 0) }\n                let _2 := add(headStart, offset)\n                if iszero(slt(add(_2, 0x1f), dataEnd))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:181:513  \"contract NestedFactory {...\"\n                let _3 := mload(_2)\n                if gt(_3, _1)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:181:513  \"contract NestedFactory {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:181:513  \"contract NestedFactory {...\" */ 0x24)\n                }\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, add(and(add(_3, 0x1f), not(31)), 32))\n                mstore(memPtr, _3)\n                if gt(add(add(_2, _3), 32), dataEnd)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:181:513  \"contract NestedFactory {...\"\n                copy_memory_to_memory_with_cleanup(add(_2, 32), add(memPtr, 32), _3)\n                value0 := memPtr\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220fcba1fba0cbd82305b2e470ca4b967c2f4ce95d08d721824fe5557e668266f1964736f6c63430008110033\"\n    }\n    /// @use-src 1:\"contracts/deps/Foo.sol\"\n    object \"FooDep_59\" {\n        code {\n            {\n                /// @src 1:66:166  \"contract FooDep {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if callvalue() { revert(0, 0) }\n                let _2 := datasize(\"FooDep_59_deployed\")\n                codecopy(_1, dataoffset(\"FooDep_59_deployed\"), _2)\n                return(_1, _2)\n            }\n        }\n        /// @use-src 1:\"contracts/deps/Foo.sol\"\n        object \"FooDep_59_deployed\" {\n            code {\n                {\n                    /// @src 1:66:166  \"contract FooDep {...\"\n                    let _1 := memoryguard(0x80)\n                    if iszero(lt(calldatasize(), 4))\n                    {\n                        let _2 := 0\n                        if eq(0xc2985578, shr(224, calldataload(_2)))\n                        {\n                            if callvalue() { revert(_2, _2) }\n                            if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                            let _3 := 64\n                            let newFreePtr := add(_1, _3)\n                            if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, _1))\n                            {\n                                mstore(_2, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(_2, 0x24)\n                            }\n                            mstore(_3, newFreePtr)\n                            mstore(_1, 3)\n                            let _4 := 0x20\n                            mstore(add(_1, _4), \"Foo\")\n                            let memPos := mload(_3)\n                            mstore(memPos, _4)\n                            let length := mload(_1)\n                            mstore(add(memPos, _4), length)\n                            let i := _2\n                            for { } lt(i, length) { i := add(i, _4) }\n                            {\n                                mstore(add(add(memPos, i), _3), mload(add(add(_1, i), _4)))\n                            }\n                            mstore(add(add(memPos, length), _3), _2)\n                            return(memPos, add(sub(add(memPos, and(add(length, 31), not(31))), memPos), _3))\n                        }\n                    }\n                    revert(0, 0)\n                }\n            }\n            data \".metadata\" hex\"a2646970667358221220c5b7c79362598e149024c6d3f1fd4a38495c72db3e5b9bc1a39806830595ee6a64736f6c63430008110033\"\n        }\n    }\n    /// @use-src 2:\"contracts/deps/more_deps/Bar.sol\"\n    object \"BarDep_70\" {\n        code {\n            {\n                /// @src 2:66:166  \"contract BarDep {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if callvalue() { revert(0, 0) }\n                let _2 := datasize(\"BarDep_70_deployed\")\n                codecopy(_1, dataoffset(\"BarDep_70_deployed\"), _2)\n                return(_1, _2)\n            }\n        }\n        /// @use-src 2:\"contracts/deps/more_deps/Bar.sol\"\n        object \"BarDep_70_deployed\" {\n            code {\n                {\n                    /// @src 2:66:166  \"contract BarDep {...\"\n                    let _1 := memoryguard(0x80)\n                    if iszero(lt(calldatasize(), 4))\n                    {\n                        let _2 := 0\n                        if eq(0xfebb0f7e, shr(224, calldataload(_2)))\n                        {\n                            if callvalue() { revert(_2, _2) }\n                            if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                            let _3 := 64\n                            let newFreePtr := add(_1, _3)\n                            if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, _1))\n                            {\n                                mstore(_2, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(_2, 0x24)\n                            }\n                            mstore(_3, newFreePtr)\n                            mstore(_1, 3)\n                            let _4 := 0x20\n                            mstore(add(_1, _4), \"Bar\")\n                            let memPos := mload(_3)\n                            mstore(memPos, _4)\n                            let length := mload(_1)\n                            mstore(add(memPos, _4), length)\n                            let i := _2\n                            for { } lt(i, length) { i := add(i, _4) }\n                            {\n                                mstore(add(add(memPos, i), _3), mload(add(add(_1, i), _4)))\n                            }\n                            mstore(add(add(memPos, length), _3), _2)\n                            return(memPos, add(sub(add(memPos, and(add(length, 31), not(31))), memPos), _3))\n                        }\n                    }\n                    revert(0, 0)\n                }\n            }\n            data \".metadata\" hex\"a2646970667358221220c29a07f4cd7022552a327a84440e84c3ee28dbfd9e22ddf9f1655d51d72d760464736f6c63430008110033\"\n        }\n    }\n}\n","hash":"0100009b96e710f1c6049ec848d92ca735523d62f12492aeea8891aae1fc6104","factoryDependencies":{"0100001362560dab3c51e65acafd8c95b04f662a2196ce452d6194517c5c560b":"contracts/deps/Foo.sol:FooDep","01000013cf1df63cc3bcb72d3d20b94db49f0e0357bbc370a5c3529c33e0e811":"contracts/deps/more_deps/Bar.sol:BarDep"}}},"contracts/deps/Foo.sol":{"FooDep":{"abi":[{"inputs":[],"name":"foo","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"foo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/deps/Foo.sol\":\"FooDep\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/deps/Foo.sol\":{\"keccak256\":\"0xd237682cb86cc07f5a901d23d9eebf3f91b4c97f113b39d1d06b64e10a6bc4e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0451be902c9d5b5cedcd9763b1c0a3ee6bd1529fc8dbeb920c67350a4feb768c\",\"dweb:/ipfs/QmaZfAa5LWSz4CxS59A3By9ehEjyEyPgtgLmiGNuyNpEtw\"]}},\"version\":1}","zk_version":"1.3.18"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Foo.sol:FooDep\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tadd\tr1, r0, r2\n\tand!\t@CPI0_1[0], r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t192, r0, r1\n\tst.1\t64, r1\n\tadd\t3, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_4[0], r0, r2\n\tst.1\t160, r2\n\tadd\t32, r0, r3\n\tst.1\t192, r3\n\tst.1\t224, r1\n\tst.1\t256, r2\n\tst.1\t259, r0\n\tadd\t@CPI0_5[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_1:\n\t.cell 340282366604025813406317257057592410112\nCPI0_2:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_3:\n\t.cell -27774245974683124405050729397388575079288907678164764833945762937327730032640\nCPI0_4:\n\t.cell 31858785518863541599296842493796276508710584217660196346798304455696068902912\nCPI0_5:\n\t.cell 7605903604911151271132453142528\n","bytecode":{"object":"0000000102200190000000190000c13d00000000020100190000000c02200198000000230000613d000000000101043b0000000d011001970000000e0110009c000000230000c13d0000000001000416000000000101004b000000230000c13d000000c001000039000000400010043f0000000301000039000000800010043f0000000f02000041000000a00020043f0000002003000039000000c00030043f000000e00010043f000001000020043f000001030000043f0000001001000041000000260001042e0000008001000039000000400010043f0000000001000416000000000101004b000000230000c13d0000002001000039000001000010044300000120000004430000000b01000041000000260001042e000000000100001900000027000104300000002500000432000000260001042e00000027000104300000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000004000000100000000000000000000000000000000000000000000000000fffffffc000000000000000000000000ffffffff00000000000000000000000000000000000000000000000000000000c298557800000000000000000000000000000000000000000000000000000000466f6f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000dd18cc3d94124396b8d6ea6e1bd1812dfc591ee98f6cf4c38588f43e65906ce2"},"methodIdentifiers":{"foo()":"c2985578"}},"irOptimized":"/// @use-src 1:\"contracts/deps/Foo.sol\"\nobject \"FooDep_59\" {\n    code {\n        {\n            /// @src 1:66:166  \"contract FooDep {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"FooDep_59_deployed\")\n            codecopy(_1, dataoffset(\"FooDep_59_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 1:\"contracts/deps/Foo.sol\"\n    object \"FooDep_59_deployed\" {\n        code {\n            {\n                /// @src 1:66:166  \"contract FooDep {...\"\n                let _1 := memoryguard(0x80)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    if eq(0xc2985578, shr(224, calldataload(_2)))\n                    {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let _3 := 64\n                        let newFreePtr := add(_1, _3)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, _1))\n                        {\n                            mstore(_2, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(_2, 0x24)\n                        }\n                        mstore(_3, newFreePtr)\n                        mstore(_1, 3)\n                        let _4 := 0x20\n                        mstore(add(_1, _4), \"Foo\")\n                        let memPos := mload(_3)\n                        mstore(memPos, _4)\n                        let length := mload(_1)\n                        mstore(add(memPos, _4), length)\n                        let i := _2\n                        for { } lt(i, length) { i := add(i, _4) }\n                        {\n                            mstore(add(add(memPos, i), _3), mload(add(add(_1, i), _4)))\n                        }\n                        mstore(add(add(memPos, length), _3), _2)\n                        return(memPos, add(sub(add(memPos, and(add(length, 31), not(31))), memPos), _3))\n                    }\n                }\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220c5b7c79362598e149024c6d3f1fd4a38495c72db3e5b9bc1a39806830595ee6a64736f6c63430008110033\"\n    }\n}\n","hash":"0100001362560dab3c51e65acafd8c95b04f662a2196ce452d6194517c5c560b","factoryDependencies":{}}},"contracts/deps/more_deps/Bar.sol":{"BarDep":{"abi":[{"inputs":[],"name":"bar","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"bar\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/deps/more_deps/Bar.sol\":\"BarDep\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/deps/more_deps/Bar.sol\":{\"keccak256\":\"0x59a77c28e9612a2710ae86961787d1892705b71913b21026860b36be18420e69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://800358f0dcefcd6f7ecbae2a9684b96bfd04425f7ef9e567562bf58af0f9dc2c\",\"dweb:/ipfs/QmTBggpHH22nQS7TXQaB18Gcv4PTSZs2tjULh3xVYd3HUf\"]}},\"version\":1}","zk_version":"1.3.18"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Bar.sol:BarDep\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tadd\tr1, r0, r2\n\tand!\t@CPI0_1[0], r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t192, r0, r1\n\tst.1\t64, r1\n\tadd\t3, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_4[0], r0, r2\n\tst.1\t160, r2\n\tadd\t32, r0, r3\n\tst.1\t192, r3\n\tst.1\t224, r1\n\tst.1\t256, r2\n\tst.1\t259, r0\n\tadd\t@CPI0_5[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_1:\n\t.cell 340282366604025813406317257057592410112\nCPI0_2:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_3:\n\t.cell -574118372904492987677146038359613397788680621569796365479061958501853036544\nCPI0_4:\n\t.cell 30024818970862619036880741992292713920358013286030220379427742706327000973312\nCPI0_5:\n\t.cell 7605903604911151271132453142528\n","bytecode":{"object":"0000000102200190000000190000c13d00000000020100190000000c02200198000000230000613d000000000101043b0000000d011001970000000e0110009c000000230000c13d0000000001000416000000000101004b000000230000c13d000000c001000039000000400010043f0000000301000039000000800010043f0000000f02000041000000a00020043f0000002003000039000000c00030043f000000e00010043f000001000020043f000001030000043f0000001001000041000000260001042e0000008001000039000000400010043f0000000001000416000000000101004b000000230000c13d0000002001000039000001000010044300000120000004430000000b01000041000000260001042e000000000100001900000027000104300000002500000432000000260001042e00000027000104300000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000004000000100000000000000000000000000000000000000000000000000fffffffc000000000000000000000000ffffffff00000000000000000000000000000000000000000000000000000000febb0f7e0000000000000000000000000000000000000000000000000000000042617200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000c7d86c0d0b0e126a0f6b880f1b0512dbb3e3d5cbca35079af354cb65a49ec923"},"methodIdentifiers":{"bar()":"febb0f7e"}},"irOptimized":"/// @use-src 2:\"contracts/deps/more_deps/Bar.sol\"\nobject \"BarDep_70\" {\n    code {\n        {\n            /// @src 2:66:166  \"contract BarDep {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"BarDep_70_deployed\")\n            codecopy(_1, dataoffset(\"BarDep_70_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 2:\"contracts/deps/more_deps/Bar.sol\"\n    object \"BarDep_70_deployed\" {\n        code {\n            {\n                /// @src 2:66:166  \"contract BarDep {...\"\n                let _1 := memoryguard(0x80)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    if eq(0xfebb0f7e, shr(224, calldataload(_2)))\n                    {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let _3 := 64\n                        let newFreePtr := add(_1, _3)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, _1))\n                        {\n                            mstore(_2, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(_2, 0x24)\n                        }\n                        mstore(_3, newFreePtr)\n                        mstore(_1, 3)\n                        let _4 := 0x20\n                        mstore(add(_1, _4), \"Bar\")\n                        let memPos := mload(_3)\n                        mstore(memPos, _4)\n                        let length := mload(_1)\n                        mstore(add(memPos, _4), length)\n                        let i := _2\n                        for { } lt(i, length) { i := add(i, _4) }\n                        {\n                            mstore(add(add(memPos, i), _3), mload(add(add(_1, i), _4)))\n                        }\n                        mstore(add(add(memPos, length), _3), _2)\n                        return(memPos, add(sub(add(memPos, and(add(length, 31), not(31))), memPos), _3))\n                    }\n                }\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220c29a07f4cd7022552a327a84440e84c3ee28dbfd9e22ddf9f1655d51d72d760464736f6c63430008110033\"\n    }\n}\n","hash":"01000013cf1df63cc3bcb72d3d20b94db49f0e0357bbc370a5c3529c33e0e811","factoryDependencies":{}}}}}}