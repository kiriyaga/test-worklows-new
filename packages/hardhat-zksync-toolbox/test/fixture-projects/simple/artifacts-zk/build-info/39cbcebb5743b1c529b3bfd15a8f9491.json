{"id":"39cbcebb5743b1c529b3bfd15a8f9491","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"contracts/Greeter.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.4.22 <0.9.0;\n\ncontract Greeter {\n    string greeting;\n    \n    constructor(string memory _greeting) {\n        greeting = _greeting;\n    }\n\n    function greet() public view returns (string memory) {\n        return greeting;\n    }\n\n}\n"}},"settings":{"optimizer":{"enabled":true,"mode":"3"},"outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata"],"":["ast"]}},"libraries":{}}},"output":{"errors":[],"version":"0.8.17","long_version":"0.8.17+commit.8df45f5f.Linux.g++","zk_version":"1.3.18","sources":{"contracts/Greeter.sol":{"id":0,"ast":{"absolutePath":"contracts/Greeter.sol","exportedSymbols":{"Greeter":[22]},"id":23,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity",">=","0.4",".22","<","0.9",".0"],"nodeType":"PragmaDirective","src":"33:32:0"},{"abstract":false,"baseContracts":[],"canonicalName":"Greeter","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":22,"linearizedBaseContracts":[22],"name":"Greeter","nameLocation":"76:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":3,"mutability":"mutable","name":"greeting","nameLocation":"97:8:0","nodeType":"VariableDeclaration","scope":22,"src":"90:15:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2,"name":"string","nodeType":"ElementaryTypeName","src":"90:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"body":{"id":12,"nodeType":"Block","src":"153:37:0","statements":[{"expression":{"id":10,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8,"name":"greeting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"163:8:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9,"name":"_greeting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"174:9:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"163:20:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":11,"nodeType":"ExpressionStatement","src":"163:20:0"}]},"id":13,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"_greeting","nameLocation":"142:9:0","nodeType":"VariableDeclaration","scope":13,"src":"128:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4,"name":"string","nodeType":"ElementaryTypeName","src":"128:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"127:25:0"},"returnParameters":{"id":7,"nodeType":"ParameterList","parameters":[],"src":"153:0:0"},"scope":22,"src":"116:74:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":20,"nodeType":"Block","src":"249:32:0","statements":[{"expression":{"id":18,"name":"greeting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"266:8:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":17,"id":19,"nodeType":"Return","src":"259:15:0"}]},"functionSelector":"cfae3217","id":21,"implemented":true,"kind":"function","modifiers":[],"name":"greet","nameLocation":"205:5:0","nodeType":"FunctionDefinition","parameters":{"id":14,"nodeType":"ParameterList","parameters":[],"src":"210:2:0"},"returnParameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":21,"src":"234:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15,"name":"string","nodeType":"ElementaryTypeName","src":"234:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"233:15:0"},"scope":22,"src":"196:85:0","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":23,"src":"67:217:0","usedErrors":[]}],"src":"33:252:0"}}},"contracts":{"contracts/Greeter.sol":{"Greeter":{"abi":[{"inputs":[{"internalType":"string","name":"_greeting","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"greet","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_greeting\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"greet\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Greeter.sol\":\"Greeter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Greeter.sol\":{\"keccak256\":\"0x25abe5df0077d5dc51d6db9d356e07496660abe198e6c95920b564e61f19c7e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60b04616a8af3388c36c73545dcd0542862c8949db0c03cc6aedd18aa4358cec\",\"dweb:/ipfs/QmTWf6AxRmQkKwjRE5PN9F4RVQAsKhjwLwa2gSL699tPoT\"]}},\"version\":1}","zk_version":"1.3.18"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Greeter.sol:Greeter\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[5]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r1\n\tand\t@CPI0_7[0], r1, r1\n\tsub.s!\t@CPI0_8[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand!\t1, r1, r3\n\tshr.s\t1, r1, r4\n\tand\t127, r4, r2\n\tadd.ne\tr4, r0, r2\n\tsub.s!\t31, r2, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\txor\tr1, r4, r4\n\tand!\t1, r4, r4\n\tjump.eq\t@.BB0_44\n.BB0_22:\n\tadd\t@CPI0_12[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tjump\t@.BB0_5\n.BB0_1:\n\tadd\t128, r0, r2\n\tst.1\t64, r2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_1[0], r3, r2\n\tsub.s!\t@CPI0_2[0], r2, r2\n\tjump.gt\t@.BB0_6\n.BB0_4:\n\tadd\t@CPI0_12[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n.BB0_5:\n\tst.1\t4, r1\n\tadd\t@CPI0_13[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_6:\n\tadd\t159, r3, r2\n\tand\t@CPI0_3[0], r2, r2\n\tst.1\t64, r2\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r4\n\tjump.eq\t@.BB0_55\n\tadd\tr0, r0, r5\n.BB0_8:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t128, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_8\n.BB0_55:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_10\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r2, r2\n\tadd\t128, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_10:\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r4\n\tsub.s!\t@CPI0_4[0], r4, r1\n\tjump.gt\t@.BB0_2\n\tadd\t128, r3, r3\n\tadd\t159, r4, r1\n\tsub!\tr1, r3, r1\n\tjump.ge\t@.BB0_2\n\tadd\t128, r4, r2\n\tld.1\tr2, r1\n\tsub.s!\t@CPI0_4[0], r1, r5\n\tjump.gt\t@.BB0_4\n\tadd\t63, r1, r5\n\tsub.s\t32, r0, r9\n\tand\tr5, r9, r5\n\tld.1\t64, r8\n\tadd\tr8, r5, r5\n\tsub!\tr5, r8, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI0_4[0], r5, r7\n\tjump.gt\t@.BB0_4\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r5\n\tst.1.inc\tr8, r1, r6\n\tadd\tr4, r1, r4\n\tadd\t160, r4, r4\n\tsub!\tr4, r3, r3\n\tjump.le\t@.BB0_17\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_44:\n\tst.1\t128, r2\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_47\n\tsub.s\t256, r0, r3\n\tand\tr1, r3, r1\n\tst.1\t160, r1\n\tsub!\tr2, r0, r1\n\tadd\t192, r0, r1\n\tadd.eq\t160, r0, r1\n\tjump\t@.BB0_45\n.BB0_47:\n\tadd\t160, r0, r1\n\tst.1\t0, r0\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB0_51\n\tadd\t@CPI0_9[0], r0, r1\n\tadd\tr0, r0, r4\n.BB0_49:\n\tadd\tr4, r0, r3\n\tsload\tr1, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r1, r1\n\tadd\t32, r3, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_49\n\tadd\t192, r3, r1\n.BB0_45:\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r1\n\tadd\t@CPI0_10[0], r1, r2\n\tsub.s!\t@CPI0_11[0], r2, r2\n\tjump.lt\t@.BB0_4\n.BB0_51:\n\tst.1\t64, r1\n\tadd\t32, r0, r2\n\tst.1.inc\tr1, r2, r3\n\tld.1\t128, r2\n\tst.1\tr3, r2\n\tadd\t64, r1, r3\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB0_54\n\tadd\tr0, r0, r4\n.BB0_53:\n\tadd\tr4, r3, r5\n\tadd\t160, r4, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_53\n.BB0_54:\n\tadd\tr2, r3, r3\n\tst.1\tr3, r0\n\tadd\t95, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_17:\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_20\n\tadd\tr0, r0, r3\n.BB0_19:\n\tadd\tr3, r6, r4\n\tadd\t32, r3, r3\n\tadd\tr3, r2, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_19\n.BB0_20:\n\tadd\tr6, r1, r1\n\tst.1\tr1, r0\n\tld.1\tr8, r4\n\tsub.s!\t@CPI0_4[0], r4, r1\n\tjump.gt\t@.BB0_4\n\tsload\tr0, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_22\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_27\n\tadd\tr3, r0, stack-[1]\n\tadd\tr4, r0, stack-[3]\n\tst.1\t0, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr8, r0, stack-[5]\n\tadd\tr9, r0, stack-[4]\n\tadd\tr6, r0, stack-[2]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r6\n\tadd\tstack-[4], r0, r9\n\tadd\tstack-[5], r0, r8\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[3], r0, r4\n\tadd\t31, r4, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r4, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_27\n.BB0_28:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_28\n.BB0_27:\n\tsub.s!\t31, r4, r1\n\tjump.le\t@.BB0_37\n\tadd\tr4, r0, stack-[3]\n\tst.1\t0, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr8, r0, stack-[5]\n\tadd\tr9, r0, stack-[4]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r3\n\tadd\tstack-[5], r0, r6\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[3], r0, r7\n\tand!\tr7, r3, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tjump.eq\t@.BB0_34\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_33:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_33\n.BB0_34:\n\tsub!\tr3, r7, r3\n\tjump.ge\t@.BB0_36\n\tshl.s\t3, r7, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r6, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_36:\n\tadd\t1, r0, r1\n\tshl.s\t1, r7, r2\n\tjump\t@.BB0_29\n.BB0_37:\n\tsub!\tr4, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_39\n\tld.1\tr6, r1\n.BB0_39:\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r2\n\tshl.s\t1, r4, r1\n.BB0_29:\n\tor\tr2, r1, r1\n\tsstore\tr0, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_6[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\n__staticcall:\n.func_begin1:\n.tmp0:\n\tfar_call.static\tr1, r2, @.BB1_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB1_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end1:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -18446744073709551457\nCPI0_2:\n\t.cell -18446744073709551489\nCPI0_3:\n\t.cell 8589934560\nCPI0_4:\n\t.cell 18446744073709551615\nCPI0_5:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_6:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_7:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_8:\n\t.cell -21855552483912501284291303069055441188061847755248476274203343518395480932352\nCPI0_9:\n\t.cell 18569430475105882587588266137607568536673111973893317399460219858819262702947\nCPI0_10:\n\t.cell -18446744073709551616\nCPI0_11:\n\t.cell -18446744073709551488\nCPI0_12:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_13:\n\t.cell 2852213850513516153367582212096\n","bytecode":{"object":"0005000000000002000000000301001900000060033002700000004d0330019700000001022001900000001e0000c13d000000040230008c000000690000413d000000000101043b0000005401100197000000550110009c000000690000c13d0000000001000416000000000101004b000000690000c13d000000000100041a000000010310019000000001041002700000007f0240018f000000000204c0190000001f0420008c00000000040000190000000104002039000000000441013f00000001044001900000006b0000613d000000590100004100000000001004350000002201000039000000290000013d0000008002000039000000400020043f0000000002000416000000000202004b000000690000c13d0000004e023000410000004f0220009c0000002c0000213d000000590100004100000000001004350000004101000039000000040010043f0000005a010000410000012f000104300000009f023000390000005002200197000000400020043f0000001f0230018f00000005043002720000003b0000613d00000000050000190000000506500210000000000761034f000000000707043b000000800660003900000000007604350000000105500039000000000645004b000000330000413d000000000502004b0000004a0000613d0000000504400210000000000141034f00000003022002100000008004400039000000000504043300000000052501cf000000000525022f000000000101043b0000010002200089000000000121022f00000000012101cf000000000151019f0000000000140435000000200130008c000000690000413d000000800400043d000000510140009c000000690000213d00000080033000390000009f01400039000000000131004b000000690000813d00000080024000390000000001020433000000510510009c000000260000213d0000003f05100039000000200900008a000000000595016f000000400800043d0000000005580019000000000685004b00000000060000190000000106004039000000510750009c000000260000213d0000000106600190000000260000c13d000000400050043f00000000061804360000000004140019000000a004400039000000000334004b000000a80000a13d00000000010000190000012f00010430000000800020043f000000000303004b000000750000c13d000001000300008a000000000131016f000000a00010043f000000000102004b000000c001000039000000a001006039000000840000013d000000a0010000390000000000000435000000000302004b0000008a0000613d000000560100004100000000040000190000000003040019000000000401041a000000a005300039000000000045043500000001011000390000002004300039000000000524004b0000007b0000413d000000c0013000390000001f01100039000000200200008a000000000121016f0000005702100041000000580220009c000000260000413d000000400010043f00000020020000390000000003210436000000800200043d00000000002304350000004003100039000000000402004b0000009a0000613d00000000040000190000000005340019000000a006400039000000000606043300000000006504350000002004400039000000000524004b000000930000413d000000000332001900000000000304350000005f02200039000000200300008a000000000232016f0000004d030000410000004d0420009c00000000020380190000004d0410009c000000000103801900000040011002100000006002200210000000000112019f0000012e0001042e000000000301004b000000b20000613d000000000300001900000000046300190000002003300039000000000523001900000000050504330000000000540435000000000413004b000000ab0000413d000000000116001900000000000104350000000004080433000000510140009c000000260000213d000000000100041a000000010210019000000001011002700000007f0310018f000000000301c0190000001f0130008c00000000010000190000000101002039000000010110018f000000000112004b0000001a0000c13d000000200130008c000000e80000413d000100000003001d000300000004001d00000000000004350000004d0100004100000000020004140000004d0320009c0000000002018019000000c00120021000000052011001c70000801002000039000500000008001d000400000009001d000200000006001d012d01280000040f0000000206000029000000040900002900000005080000290000000102200190000000690000613d00000003040000290000001f024000390000000502200270000000200340008c0000000002004019000000000301043b00000001010000290000001f01100039000000050110027000000000011300190000000002230019000000000312004b000000e80000813d000000000002041b0000000102200039000000000312004b000000e40000413d0000001f0140008c000001170000a13d000300000004001d00000000000004350000004d0100004100000000020004140000004d0320009c0000000002018019000000c00120021000000052011001c70000801002000039000500000008001d000400000009001d012d01280000040f000000040300002900000005060000290000000102200190000000690000613d000000030700002900000000033701700000002002000039000000000101043b000001090000613d0000002002000039000000000400001900000000056200190000000005050433000000000051041b000000200220003900000001011000390000002004400039000000000534004b000001010000413d000000000373004b000001140000813d0000000303700210000000f80330018f000000010400008a000000000334022f000000000343013f00000000026200190000000002020433000000000232016f000000000021041b00000001010000390000000102700210000001210000013d000000000104004b00000000010000190000011b0000613d00000000010604330000000302400210000000010300008a000000000223022f000000000232013f000000000221016f0000000101400210000000000112019f000000000010041b00000020010000390000010000100443000001200000044300000053010000410000012e0001042e0000012b002104230000000102000039000000000001042d0000000002000019000000000001042d0000012d000004320000012e0001042e0000012f00010430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000009fffffffffffffffffffffffffffffffffffffffffffffffff000000000000007f00000000000000000000000000000000000000000000000000000001ffffffe0000000000000000000000000000000000000000000000000ffffffffffffffff02000000000000000000000000000000000000200000000000000000000000000000000200000000000000000000000000000040000001000000000000000000ffffffff00000000000000000000000000000000000000000000000000000000cfae321700000000000000000000000000000000000000000000000000000000290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563ffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffff00000000000000804e487b7100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002400000000000000000000000000000000000000000000000000000000000000000000000000000000000000008482402bfb2d1b6ec2bc1a5a597431f2bf8632e7317c9389a4deaa05ccf36ad4"},"methodIdentifiers":{"greet()":"cfae3217"}},"irOptimized":"/// @use-src 0:\"contracts/Greeter.sol\"\nobject \"Greeter_22\" {\n    code {\n        {\n            /// @src 0:67:284  \"contract Greeter {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"Greeter_22\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _1 := add(memoryDataOffset, argSize)\n            let _2 := 32\n            if slt(sub(_1, memoryDataOffset), _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:67:284  \"contract Greeter {...\"\n            let offset := mload(memoryDataOffset)\n            let _3 := sub(shl(64, 1), 1)\n            if gt(offset, _3)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:67:284  \"contract Greeter {...\"\n            let _4 := add(memoryDataOffset, offset)\n            let _5 := 0x1f\n            if iszero(slt(add(_4, _5), _1))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:67:284  \"contract Greeter {...\"\n            let _6 := mload(_4)\n            if gt(_6, _3)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:67:284  \"contract Greeter {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:67:284  \"contract Greeter {...\" */ 0x24)\n            }\n            let _7 := not(31)\n            let array := allocate_memory(add(and(add(_6, _5), _7), _2))\n            mstore(array, _6)\n            if gt(add(add(_4, _6), _2), _1)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:67:284  \"contract Greeter {...\"\n            let i := /** @src -1:-1:-1 */ 0\n            /// @src 0:67:284  \"contract Greeter {...\"\n            for { } lt(i, _6) { i := add(i, _2) }\n            {\n                mstore(add(add(array, i), _2), mload(add(add(_4, i), _2)))\n            }\n            mstore(add(add(array, _6), _2), /** @src -1:-1:-1 */ 0)\n            /// @src 0:67:284  \"contract Greeter {...\"\n            let newLen := mload(array)\n            if gt(newLen, _3)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:67:284  \"contract Greeter {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:67:284  \"contract Greeter {...\" */ 0x24)\n            }\n            let _8 := sload(/** @src -1:-1:-1 */ 0)\n            /// @src 0:67:284  \"contract Greeter {...\"\n            let length := /** @src -1:-1:-1 */ 0\n            /// @src 0:67:284  \"contract Greeter {...\"\n            let _9 := 1\n            length := shr(_9, _8)\n            let outOfPlaceEncoding := and(_8, _9)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, _2))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:67:284  \"contract Greeter {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:67:284  \"contract Greeter {...\" */ 0x24)\n            }\n            if gt(length, _5)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, 0)\n                /// @src 0:67:284  \"contract Greeter {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:67:284  \"contract Greeter {...\" */ _2)\n                let deleteStart := add(data, shr(5, add(newLen, _5)))\n                if lt(newLen, _2) { deleteStart := data }\n                let _10 := add(data, shr(5, add(length, _5)))\n                let start := deleteStart\n                for { } lt(start, _10) { start := add(start, _9) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 0:67:284  \"contract Greeter {...\"\n            let srcOffset := /** @src -1:-1:-1 */ 0\n            /// @src 0:67:284  \"contract Greeter {...\"\n            srcOffset := _2\n            switch gt(newLen, _5)\n            case 1 {\n                let loopEnd := and(newLen, _7)\n                mstore(/** @src -1:-1:-1 */ 0, 0)\n                /// @src 0:67:284  \"contract Greeter {...\"\n                let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:67:284  \"contract Greeter {...\" */ _2)\n                let i_1 := /** @src -1:-1:-1 */ 0\n                /// @src 0:67:284  \"contract Greeter {...\"\n                for { } lt(i_1, loopEnd) { i_1 := add(i_1, _2) }\n                {\n                    sstore(dstPtr, mload(add(array, srcOffset)))\n                    dstPtr := add(dstPtr, _9)\n                    srcOffset := add(srcOffset, _2)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(array, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src -1:-1:-1 */ 0, /** @src 0:67:284  \"contract Greeter {...\" */ add(shl(_9, newLen), _9))\n            }\n            default {\n                let value := /** @src -1:-1:-1 */ 0\n                /// @src 0:67:284  \"contract Greeter {...\"\n                if newLen\n                {\n                    value := mload(add(array, srcOffset))\n                }\n                sstore(/** @src -1:-1:-1 */ 0, /** @src 0:67:284  \"contract Greeter {...\" */ or(and(value, not(shr(shl(3, newLen), not(0)))), shl(_9, newLen)))\n            }\n            let _11 := mload(64)\n            let _12 := datasize(\"Greeter_22_deployed\")\n            codecopy(_11, dataoffset(\"Greeter_22_deployed\"), _12)\n            return(_11, _12)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n    }\n    /// @use-src 0:\"contracts/Greeter.sol\"\n    object \"Greeter_22_deployed\" {\n        code {\n            {\n                /// @src 0:67:284  \"contract Greeter {...\"\n                let _1 := memoryguard(0x80)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    if eq(0xcfae3217, shr(224, calldataload(_2)))\n                    {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let ret := _2\n                        let slotValue := sload(_2)\n                        let length := _2\n                        let _3 := 1\n                        length := shr(_3, slotValue)\n                        let outOfPlaceEncoding := and(slotValue, _3)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        let _4 := 32\n                        if eq(outOfPlaceEncoding, lt(length, _4))\n                        {\n                            mstore(_2, shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(_2, 0x24)\n                        }\n                        mstore(_1, length)\n                        switch outOfPlaceEncoding\n                        case 0 {\n                            mstore(add(_1, _4), and(slotValue, not(255)))\n                            ret := add(add(_1, shl(5, iszero(iszero(length)))), _4)\n                        }\n                        case 1 {\n                            mstore(_2, _2)\n                            let dataPos := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n                            let i := _2\n                            for { } lt(i, length) { i := add(i, _4) }\n                            {\n                                mstore(add(add(_1, i), _4), sload(dataPos))\n                                dataPos := add(dataPos, _3)\n                            }\n                            ret := add(add(_1, i), _4)\n                        }\n                        let _5 := not(31)\n                        let newFreePtr := add(_1, and(add(sub(ret, _1), 31), _5))\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, _1))\n                        {\n                            mstore(_2, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(_2, 0x24)\n                        }\n                        let _6 := 64\n                        mstore(_6, newFreePtr)\n                        mstore(newFreePtr, _4)\n                        let length_1 := mload(_1)\n                        mstore(add(newFreePtr, _4), length_1)\n                        let i_1 := _2\n                        for { } lt(i_1, length_1) { i_1 := add(i_1, _4) }\n                        {\n                            mstore(add(add(newFreePtr, i_1), _6), mload(add(add(_1, i_1), _4)))\n                        }\n                        mstore(add(add(newFreePtr, length_1), _6), _2)\n                        return(newFreePtr, add(sub(add(newFreePtr, and(add(length_1, 31), _5)), newFreePtr), _6))\n                    }\n                }\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212204c9b9c56b7a3376fe527677042ece81d80e67949dab53a992d050a802e3b8f7264736f6c63430008110033\"\n    }\n}\n","hash":"0100005df8953460e2b742eca1d4073f5ebcfe6c9f4d0e6de2ac268cfb85a509","factoryDependencies":{}}}}}}