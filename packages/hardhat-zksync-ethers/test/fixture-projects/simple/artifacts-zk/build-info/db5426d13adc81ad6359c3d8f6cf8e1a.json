{"id":"db5426d13adc81ad6359c3d8f6cf8e1a","_format":"hh-sol-build-info-1","solcVersion":"0.8.9","solcLongVersion":"0.8.9+commit.e5eed63a","input":{"language":"Solidity","sources":{"contracts/Greeter.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.9;\n\ncontract Greeter {\n\n    string greeting;\n    constructor() {\n        greeting = \"Hello, World!\";\n    }\n\n    function greet() public view returns (string memory) {\n        return greeting;\n    }\n\n}\n"},"contracts/IGreeter.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.9;\n\ninterface IGreeter {\n    function greet() external view returns (string memory);\n}"}},"settings":{"optimizer":{"enabled":true,"mode":"3"},"outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata"],"":["ast"]}},"libraries":{}}},"output":{"errors":[],"version":"0.8.9","long_version":"0.8.9+commit.e5eed63a.Linux.g++","zk_version":"1.3.14","sources":{"contracts/Greeter.sol":{"id":0,"ast":{"absolutePath":"contracts/Greeter.sol","exportedSymbols":{"Greeter":[20]},"id":21,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"33:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"Greeter","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":20,"linearizedBaseContracts":[20],"name":"Greeter","nameLocation":"67:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":3,"mutability":"mutable","name":"greeting","nameLocation":"89:8:0","nodeType":"VariableDeclaration","scope":20,"src":"82:15:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2,"name":"string","nodeType":"ElementaryTypeName","src":"82:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"body":{"id":10,"nodeType":"Block","src":"117:43:0","statements":[{"expression":{"id":8,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6,"name":"greeting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"127:8:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"48656c6c6f2c20576f726c6421","id":7,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"138:15:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_acaf3289d7b601cbd114fb36c4d29c85bbfd5e133f14cb355c3fd8d99367964f","typeString":"literal_string \"Hello, World!\""},"value":"Hello, World!"},"src":"127:26:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":9,"nodeType":"ExpressionStatement","src":"127:26:0"}]},"id":11,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4,"nodeType":"ParameterList","parameters":[],"src":"114:2:0"},"returnParameters":{"id":5,"nodeType":"ParameterList","parameters":[],"src":"117:0:0"},"scope":20,"src":"103:57:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":18,"nodeType":"Block","src":"219:32:0","statements":[{"expression":{"id":16,"name":"greeting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"236:8:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":15,"id":17,"nodeType":"Return","src":"229:15:0"}]},"functionSelector":"cfae3217","id":19,"implemented":true,"kind":"function","modifiers":[],"name":"greet","nameLocation":"175:5:0","nodeType":"FunctionDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[],"src":"180:2:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19,"src":"204:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13,"name":"string","nodeType":"ElementaryTypeName","src":"204:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"203:15:0"},"scope":20,"src":"166:85:0","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":21,"src":"58:196:0","usedErrors":[]}],"src":"33:222:0"}},"contracts/IGreeter.sol":{"id":1,"ast":{"absolutePath":"contracts/IGreeter.sol","exportedSymbols":{"IGreeter":[28]},"id":29,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":22,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"33:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IGreeter","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":28,"linearizedBaseContracts":[28],"name":"IGreeter","nameLocation":"68:8:1","nodeType":"ContractDefinition","nodes":[{"functionSelector":"cfae3217","id":27,"implemented":false,"kind":"function","modifiers":[],"name":"greet","nameLocation":"92:5:1","nodeType":"FunctionDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[],"src":"97:2:1"},"returnParameters":{"id":26,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":27,"src":"123:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":24,"name":"string","nodeType":"ElementaryTypeName","src":"123:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"122:15:1"},"scope":28,"src":"83:55:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":29,"src":"58:82:1","usedErrors":[]}],"src":"33:107:1"}}},"contracts":{"contracts/Greeter.sol":{"Greeter":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"greet","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"greet\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Greeter.sol\":\"Greeter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xarrscLMcCTUtTOntnfDIulLculVcul jjTpeulxarulrulxarrcLgvifCTUcarrLsTFOtfDncarrIulc]jmuljuljul VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Greeter.sol\":{\"keccak256\":\"0x4da93c7edd9598821ce43ad1b30a8d1f85fb064ea5d139cae678e83d17688b78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea1d1e2bdc28da0baba0d318b6afc8c6fd91189fb737c0522d5b84913f0edfd\",\"dweb:/ipfs/QmTTdTvJHU2x2TwMaJGawZPctwq9HAgoxdXNxRnjfYLa8w\"]}},\"version\":1}","zk_version":"1.3.14"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Greeter.sol:Greeter\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[1]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tld\tr1, r1\n\tand\t@CPI0_4[0], r1, r1\n\tsub.s!\t@CPI0_5[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r0, r1\n\tadd\tstack[@calldatasize], r1, r1\n\tadd\t@CPI0_6[0], r0, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_6[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand!\t1, r1, r3\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r4\n\tadd.eq\tr4, r0, r2\n\tsub.s!\t31, r2, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\txor\tr1, r4, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_4\n\tst.1\t128, r2\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_19\n\tsub.s\t256, r0, r2\n\tand\tr1, r2, r1\n\tst.1\t160, r1\n\tadd\t64, r0, r1\n\tjump\t@.BB0_17\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB0_5\n.BB0_4:\n\tadd\t@CPI0_8[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_9[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_5:\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_9\n\tadd\tr3, r0, stack-[1]\n\tst.1\t0, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tadd\t31, r2, r2\n\tshr.s\t5, r2, r2\n\tadd\tr1, r2, r2\n\tsub!\tr1, r2, r3\n\tjump.ge\t@.BB0_9\n.BB0_10:\n\tsstore\tr1, r0\n\tadd\t1, r1, r1\n\tsub!\tr1, r2, r3\n\tjump.lt\t@.BB0_10\n.BB0_9:\n\tadd\t@CPI0_2[0], r0, r1\n\tsstore\tr0, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_3[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_19:\n\tadd\t32, r0, r1\n\tst.1\t0, r0\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB0_17\n\tadd\t@CPI0_7[0], r0, r1\n\tadd\tr0, r0, r4\n.BB0_21:\n\tadd\tr4, r0, r3\n\tsload\tr1, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r1, r1\n\tadd\t32, r3, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_21\n\tadd\t64, r3, r1\n.BB0_17:\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[1]\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\nabi_encode_string:\n.func_begin1:\n\tadd\t32, r0, r2\n\tst.1.inc\tr1, r2, r3\n\tld.1\t128, r2\n\tst.1\tr3, r2\n\tsub!\tr2, r0, r3\n\tadd\t64, r1, r1\n\tjump.eq\t@.BB1_4\n\tadd\tr0, r0, r3\n.BB1_2:\n\tadd\tr1, r3, r4\n\tadd\t160, r3, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB1_2\n\tsub!\tr3, r2, r3\n\tjump.le\t@.BB1_4\n\tadd\tr1, r2, r3\n\tst.1\tr3, r0\n\tjump\t@.BB1_6\n.BB1_4:\n.BB1_6:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end1:\n\nfinalize_allocation:\n.func_begin2:\n\tadd\t159, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r1\n\tadd\t@CPI2_0[0], r1, r2\n\tsub.s!\t@CPI2_1[0], r2, r2\n\tjump.le\t@.BB2_1\n\tst.1\t64, r1\n\tret\n.BB2_1:\n\tadd\t@CPI2_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\n__staticcall:\n.func_begin3:\n.tmp0:\n\tfar_call.static\tr1, r2, @.BB3_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB3_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end3:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_2:\n\t.cell 32745724963525307109523713280444231124987508675532689804809885653891645702170\nCPI0_3:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_4:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_5:\n\t.cell -21855552483912501284291303069055441188061847755248476274203343518395480932352\nCPI0_6:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_7:\n\t.cell 18569430475105882587588266137607568536673111973893317399460219858819262702947\nCPI0_8:\nCPI2_2:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_9:\nCPI2_3:\n\t.cell 2852213850513516153367582212096\nCPI2_0:\n\t.cell -18446744073709551616\nCPI2_1:\n\t.cell -18446744073709551489\n","bytecode":{"object":"00020000000000020001000000000002000100000001035500000060011002700000002f0010019d0000008001000039000000400010043f0000000101200190000000350000c13d0000000001000031000000040110008c000000690000413d0000000101000367000000000101043b0000003301100197000000340110009c000000690000c13d0000000001000416000000000101004b000000690000c13d000000040100008a00000000011000310000003502000041000000000301004b000000000300001900000000030240190000003501100197000000000401004b000000000200a019000000350110009c00000000010300190000000001026019000000000101004b000000690000c13d000000000100041a000000010310019000000001021002700000007f0420018f00000000020460190000001f0420008c00000000040000190000000104002039000000000441013f0000000104400190000000430000c13d000000800020043f000000000303004b0000006b0000c13d000001000200008a000000000121016f000000a00010043f00000040010000390000007a0000013d0000000001000416000000000101004b000000690000c13d000000000100041a000000010210019000000001011002700000007f0310018f000000000301c0190000001f0130008c00000000010000190000000101002039000000010110018f000000000112004b000000490000613d000000370100004100000000001004350000002201000039000000040010043f0000003801000041000000b700010430000000200130008c000000620000413d000100000003001d00000000000004350000002f0100004100000000020004140000002f0320009c0000000001024019000000c00110021000000030011001c7000080100200003900b500b00000040f0000000102200190000000690000613d000000000101043b00000001020000290000001f0220003900000005022002700000000002210019000000000321004b000000620000813d000000000001041b0000000101100039000000000321004b0000005e0000413d0000003101000041000000000010041b0000002001000039000001000010044300000120000004430000003201000041000000b60001042e0000000001000019000000b70001043000000020010000390000000000000435000000000302004b0000007a0000613d000000360100004100000000040000190000000003040019000000000401041a000000a005300039000000000045043500000001011000390000002004300039000000000524004b000000710000413d000000400130003900b500a20000040f000000400100043d000100000001001d00b500890000040f000000010400002900000000014100490000002f020000410000002f0310009c00000000010280190000002f0340009c000000000204401900000040022002100000006001100210000000000121019f000000b60001042e00000020020000390000000003210436000000800200043d0000000000230435000000000302004b00000040011000390000009d0000613d00000000030000190000000004310019000000a005300039000000000505043300000000005404350000002003300039000000000423004b000000910000413d000000000323004b0000009d0000a13d000000000321001900000000000304350000009d0000013d0000001f02200039000000200300008a000000000232016f0000000001210019000000000001042d0000009f01100039000000200200008a000000000121016f00000039021000410000003a0220009c000000aa0000a13d000000400010043f000000000001042d000000370100004100000000001004350000004101000039000000040010043f0000003801000041000000b700010430000000b3002104230000000102000039000000000001042d0000000002000019000000000001042d000000b500000432000000b60001042e000000b700010430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff020000000000000000000000000000000000002000000000000000000000000048656c6c6f2c20576f726c64210000000000000000000000000000000000001a0000000200000000000000000000000000000040000001000000000000000000ffffffff00000000000000000000000000000000000000000000000000000000cfae3217000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5634e487b71000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffff000000000000007f00000000000000000000000000000000000000000000000000000000000000007ad12a7d60c8014ffca08c2e052b85e51d91c99c8bbfd02e8c75ffe264b900b4"},"methodIdentifiers":{"greet()":"cfae3217"}},"irOptimized":"/*=====================================================*\n *                       WARNING                       *\n *  Solidity to Yul compilation is still EXPERIMENTAL  *\n *       It can result in LOSS OF FUNDS or worse       *\n *                !USE AT YOUR OWN RISK!               *\n *=====================================================*/\n\n/// @use-src 0:\"contracts/Greeter.sol\"\nobject \"Greeter_20\" {\n    code {\n        {\n            /// @src 0:58:254  \"contract Greeter {...\"\n            mstore(64, 128)\n            if callvalue() { revert(0, 0) }\n            /// @src 0:127:153  \"greeting = \\\"Hello, World!\\\"\"\n            let _1 := 0x00\n            /// @src 0:58:254  \"contract Greeter {...\"\n            let _2 := sload(/** @src 0:127:153  \"greeting = \\\"Hello, World!\\\"\" */ _1)\n            /// @src 0:58:254  \"contract Greeter {...\"\n            let length := /** @src 0:127:153  \"greeting = \\\"Hello, World!\\\"\" */ _1\n            /// @src 0:58:254  \"contract Greeter {...\"\n            let _3 := 1\n            length := shr(_3, _2)\n            let outOfPlaceEncoding := and(_2, _3)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, 32))\n            {\n                mstore(/** @src 0:127:153  \"greeting = \\\"Hello, World!\\\"\" */ _1, /** @src 0:58:254  \"contract Greeter {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src 0:127:153  \"greeting = \\\"Hello, World!\\\"\" */ _1, /** @src 0:58:254  \"contract Greeter {...\" */ 0x24)\n            }\n            if gt(length, 31)\n            {\n                mstore(/** @src 0:127:153  \"greeting = \\\"Hello, World!\\\"\" */ _1, _1)\n                /// @src 0:58:254  \"contract Greeter {...\"\n                let data := keccak256(/** @src 0:127:153  \"greeting = \\\"Hello, World!\\\"\" */ _1, /** @src 0:58:254  \"contract Greeter {...\" */ 32)\n                let _4 := add(data, shr(5, add(length, 31)))\n                let start := data\n                for { } lt(start, _4) { start := add(start, _3) }\n                {\n                    sstore(start, /** @src 0:127:153  \"greeting = \\\"Hello, World!\\\"\" */ _1)\n                }\n            }\n            /// @src 0:58:254  \"contract Greeter {...\"\n            sstore(/** @src 0:127:153  \"greeting = \\\"Hello, World!\\\"\" */ _1, /** @src 0:58:254  \"contract Greeter {...\" */ add(\"Hello, World!\", 26))\n            let _5 := datasize(\"Greeter_20_deployed\")\n            codecopy(128, dataoffset(\"Greeter_20_deployed\"), _5)\n            return(128, _5)\n        }\n    }\n    /// @use-src 0:\"contracts/Greeter.sol\"\n    object \"Greeter_20_deployed\" {\n        code {\n            {\n                /// @src 0:58:254  \"contract Greeter {...\"\n                mstore(64, 128)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _1 := 0\n                    if eq(0xcfae3217, shr(224, calldataload(_1)))\n                    {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let ret := _1\n                        let slotValue := sload(_1)\n                        let length := _1\n                        let _2 := 1\n                        length := shr(_2, slotValue)\n                        let outOfPlaceEncoding := and(slotValue, _2)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        let _3 := 32\n                        if eq(outOfPlaceEncoding, lt(length, _3))\n                        {\n                            mstore(_1, shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(_1, 0x24)\n                        }\n                        let pos := array_storeLengthForEncoding_string(length)\n                        switch outOfPlaceEncoding\n                        case 0 {\n                            mstore(pos, and(slotValue, not(255)))\n                            ret := add(pos, _3)\n                        }\n                        case 1 {\n                            let dataPos := array_dataslot_string_storage()\n                            let i := _1\n                            for { } lt(i, length) { i := add(i, _3) }\n                            {\n                                mstore(add(pos, i), sload(dataPos))\n                                dataPos := add(dataPos, _2)\n                            }\n                            ret := add(pos, i)\n                        }\n                        finalize_allocation(add(ret, not(127)))\n                        let memPos := mload(64)\n                        return(memPos, sub(abi_encode_string(memPos), memPos))\n                    }\n                }\n                revert(0, 0)\n            }\n            function array_storeLengthForEncoding_string(length) -> updated_pos\n            {\n                mstore(128, length)\n                updated_pos := 160\n            }\n            function abi_encode_string(headStart) -> tail\n            {\n                let _1 := 32\n                mstore(headStart, _1)\n                let length := mload(128)\n                mstore(add(headStart, _1), length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, _1) }\n                {\n                    mstore(add(add(headStart, i), 64), mload(add(i, 160)))\n                }\n                if gt(i, length)\n                {\n                    mstore(add(add(headStart, length), 64), 0)\n                }\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function array_dataslot_string_storage() -> data\n            {\n                mstore(0, 0)\n                data := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n            }\n            function finalize_allocation(size)\n            {\n                let newFreePtr := add(128, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, 128))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n        }\n        data \".metadata\" hex\"a36469706673582212201df7e3b5e851a440cc267a791813c848edacbbaaed806393afc754048731ba046c6578706572696d656e74616cf564736f6c63430008090041\"\n    }\n}\n","hash":"0100003df332052ad277993dfb7e2785b7c8743db110e4daf4cd5ac3cc9f8476","factoryDependencies":{}}},"contracts/IGreeter.sol":{"IGreeter":{"abi":[{"inputs":[],"name":"greet","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"greet\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IGreeter.sol\":\"IGreeter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xarrscLMcCTUtTOntnfDIulLculVcul jjTpeulxarulrulxarrcLgvifCTUcarrLsTFOtfDncarrIulc]jmuljuljul VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IGreeter.sol\":{\"keccak256\":\"0x402a3f6250d408a99e8519e2d6df1835b05561138f292514cca6631fdb9b4898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48c61ae3702d1f579f3bb450ce4e4eb035989148385d72d40ff12d8890a38a33\",\"dweb:/ipfs/QmW3guRs6rqUK2cGhKAC471Ctj5b6u9B6vfqunmnc3UorE\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"greet()":"cfae3217"}},"irOptimized":""}}}}}